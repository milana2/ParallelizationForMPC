def convex_hull(X_coords_0, Y_coords_0, N_0, result_X_0, result_Y_0):
    # Shared array declarations
    _1_2 = sint.Tensor([N_0])
    _11_0 = sint.Tensor([N_0])
    _12_0 = sint.Tensor([N_0])
    _13_0 = sint.Tensor([N_0])
    _14_0 = sint.Tensor([N_0])
    _15_0 = sint.Tensor([N_0, N_0])
    _16_0 = sint.Tensor([N_0, N_0])
    _17_0 = sint.Tensor([N_0, N_0])
    _18_0 = sint.Tensor([N_0, N_0])
    _19_0 = sint.Tensor([N_0, N_0])
    _2_2 = sint.Tensor([N_0])
    _20_0 = sint.Tensor([N_0])
    _3_2 = sint.Tensor([N_0])
    _6_3 = sint.Tensor([N_0, N_0])
    _7_3 = sint.Tensor([N_0, N_0])
    _8_3 = sint.Tensor([N_0, N_0])
    _9_3 = sint.Tensor([N_0, N_0])
    is_hull_3 = sint.Tensor([N_0, N_0])
    is_hull_5 = sint.Tensor([N_0, N_0])
    is_hull_6 = sint.Tensor([N_0])
    p1_X_2 = sint.Tensor([N_0])
    p1_Y_2 = sint.Tensor([N_0])
    p2_X_3 = sint.Tensor([N_0, N_0])
    p2_Y_3 = sint.Tensor([N_0, N_0])
    result_X_2 = sint.Tensor([N_0])
    result_Y_2 = sint.Tensor([N_0])
    val_X_2 = sint.Tensor([N_0])
    val_X_3 = sint.Tensor([N_0])
    val_X_4 = sint.Tensor([N_0])
    val_Y_2 = sint.Tensor([N_0])
    val_Y_3 = sint.Tensor([N_0])
    val_Y_4 = sint.Tensor([N_0])
    # Function body
    _11_0[:] = lift(lambda indices: sint(result_X_0), [N_0])
    _12_0[:] = lift(lambda indices: sint(result_Y_0), [N_0])
    _13_0[:] = lift(lambda indices: sint((X_coords_0[indices[0]])), [N_0])
    _14_0[:] = lift(lambda indices: sint((Y_coords_0[indices[0]])), [N_0])
    is_hull_2 = True
    _16_0.assign_vector_by_indices((lift(lambda indices: sint((X_coords_0[indices[1]])), [N_0, N_0])).get_vector(), None, None)
    _17_0.assign_vector_by_indices((lift(lambda indices: sint((Y_coords_0[indices[1]])), [N_0, N_0])).get_vector(), None, None)
    is_hull_4 = False
    val_X_2[:] = _11_0[:]
    val_Y_2[:] = _12_0[:]
    p1_X_2[:] = _13_0[:]
    p1_Y_2[:] = _14_0[:]
    _15_0.assign_vector_by_indices((lift(lambda indices: sint(is_hull_2), [N_0, N_0])).get_vector(), None, None)
    p2_X_3.assign_vector_by_indices((_16_0.get_vector_by_indices(None, None)).get_vector(), None, None)
    p2_Y_3.assign_vector_by_indices((_17_0.get_vector_by_indices(None, None)).get_vector(), None, None)
    _1_2[:] = (p1_X_2[:] <= 0)
    _18_0.assign_vector_by_indices((lift(lambda indices: sint(p1_X_2[:]), [N_0, N_0])).get_vector(), None, None)
    val_X_3[:] = p1_X_2[:]
    _2_2[:] = (p1_Y_2[:] >= 0)
    _19_0.assign_vector_by_indices((lift(lambda indices: sint(p1_Y_2[:]), [N_0, N_0])).get_vector(), None, None)
    val_Y_3[:] = p1_Y_2[:]
    _6_3.assign_vector_by_indices(((_18_0.get_vector_by_indices(None, None) <= p2_X_3.get_vector_by_indices(None, None))).get_vector(), None, None)
    _3_2[:] = (_1_2[:] and _2_2[:])
    _7_3.assign_vector_by_indices(((_19_0.get_vector_by_indices(None, None) >= p2_Y_3.get_vector_by_indices(None, None))).get_vector(), None, None)
    _8_3.assign_vector_by_indices(((_6_3.get_vector_by_indices(None, None) or _7_3.get_vector_by_indices(None, None))).get_vector(), None, None)
    _9_3.assign_vector_by_indices(((~_8_3.get_vector_by_indices(None, None))).get_vector(), None, None)
    for _21_0 in range(0, N_0):

        is_hull_5.assign_vector_by_indices((_9_3.get_vector_by_indices(None, _21_0).if_else(is_hull_4, is_hull_3.get_vector_by_indices(None, _21_0))).get_vector(), None, _21_0)
    _20_0[:] = drop_dim(is_hull_5)
    is_hull_6[:] = _3_2[:].if_else(_20_0[:], is_hull_2)
    val_X_4[:] = is_hull_6[:].if_else(val_X_3[:], val_X_2[:])
    val_Y_4[:] = is_hull_6[:].if_else(val_Y_3[:], val_Y_2[:])
    _11_0[:][:] = val_X_4[:]; result_X_2[:] = _11_0{N_0}[][:]
    _12_0[:][:] = val_Y_4[:]; result_Y_2[:] = _12_0{N_0}[][:]
    _10_1 = (result_X_2,result_Y_2,)
    return _10_1
