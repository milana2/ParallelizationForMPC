min_sum_1 = 10000
min_index_1 = 0
sum_2 = 0
_6_0.get_vector_by_indices(None, None) = lift(lambda indices: (S_0[((indices[0] * D_0) + indices[1])]), [N_0, D_0])
_7_0.get_vector_by_indices(None, None) = lift(lambda indices: (C_0[indices[1]]), [N_0, D_0])
_13_0.get_vector_by_indices(None) = lift(lambda indices: indices[0], [N_0])
_3_0.get_vector_by_indices(None) = lift(lambda indices: min_sum_1, [N_0])
_4_0.get_vector_by_indices(None) = lift(lambda indices: min_index_1, [N_0])
_5_0.get_vector_by_indices(None, None) = lift(lambda indices: sum_2, [N_0, D_0])
d_3.get_vector_by_indices(None, None) = (_6_0.get_vector_by_indices(None, None) - _7_0.get_vector_by_indices(None, None))
p_3.get_vector_by_indices(None, None) = (d_3.get_vector_by_indices(None, None) * d_3.get_vector_by_indices(None, None))
for _12_0 in range(0, D_0):

    sum_4.get_vector_by_indices(None, i_1) = (sum_3.get_vector_by_indices(None, i_1) + p_3.get_vector_by_indices(None, i_1))
_8_0.get_vector_by_indices(None) = drop_dim(sum_4{N_0, D_0}[])
_9_0.get_vector_by_indices(None) = drop_dim(sum_4{N_0, D_0}[])
min_sum_3.get_vector_by_indices(None) = _9_0.get_vector_by_indices(None)
for _14_0 in range(0, N_0):

    _1_2.get_vector_by_indices(_14_0) = (_8_0.get_vector_by_indices(_14_0) < min_sum_2.get_vector_by_indices(_14_0))
    min_sum_4.get_vector_by_indices(_14_0) = _1_2.get_vector_by_indices(_14_0).if_else(min_sum_3.get_vector_by_indices(_14_0), min_sum_2.get_vector_by_indices(_14_0))
for _15_0 in range(0, N_0):

    min_index_4.get_vector_by_indices(_15_0) = _1_2.get_vector_by_indices(_15_0).if_else(_13_0.get_vector_by_indices(_15_0), min_index_2.get_vector_by_indices(_15_0))
_10_0 = drop_dim(min_sum_4{N_0}[])
_11_0 = drop_dim(min_index_4{N_0}[])
_2_1 = (['_10_0,', '_11_0,'])
return _2_1
